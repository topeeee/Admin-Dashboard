// Here you can add other styles
.menu_drop {
  background-color: gray;
}

//.menu_drop:hover {
//  background-color: blue;
//}
//.menu_drop:active {
//  background-color: yellow;
//}

.cus-status {
  $primary: #e0758e;

  @import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700);





  .box{
    width: 100%;
    max-width: 400px;
    margin: 2rem auto;
    background: white;
    border: 1px solid white;
    border-radius: 3px;
    text-align: left;
  }





  /*****
   *
   * Radio checked style related
   * the fun part starts here
   *
   */


  // Hide those ugly radioboxes
  input[type=radio]{
    display: none;
  }

  /**
   * How it should look when hovered
   */
  .active-label{
    color: $primary;

    &:before{
      background: white;
      border-color: $primary;
    }
  }

  /**
   * Make those labels sexy
   */
  label{
    font-size: 1rem;
    font-weight: bold;
    line-height: 1;
    cursor: pointer;
    display: block;
    padding: 1rem 1rem 1rem 3rem;
    position: relative;
    border-top: 1px solid rgba(black,.1);
    background: white;
    whitespace: no-wrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: all .15s ease;

    &:focus,
    &:hover,
    &:active{
      @extend .active-label;
    }

    &:first-of-type{
      border: 0;
    }

    /**
     * This is the radio fake dot basically
     */
    &:before{
      content: "";
      position: absolute;
      left: 1rem;
      top: 1rem;
      width: 16px;
      height: 16px;
      border-radius: 50%;
      border: .2rem solid #ccc;
    }
  }

  /**
   * How it should look when checked
   */
  input:checked + label{
    @extend .active-label;

    &:before{
      border-color: white;
      border: none;
      background: $primary;
    }
  }

  /**
   * How it should look when disabled
   */
  input:disabled + label{
    background: #efefef;
    color: rgba(black,.5);
    cursor: not-allowed;

    &:hover{
      border-color: rgba(black,.1);
    }

    &:before{
      border-color: white;
      background: white;
    }
  }

}


.custom-card{
  height:200px;
  width:200px;
  border-radius:100%;
  border: 10px solid;
  //background: linear-gradient(to right, red 25%, yellow 25%, green 25%, blue 25%);
  border-color: orange orange green lightblue;
  //margin: auto;

}

.cus-card{
  flex: 0 0 32.4%;
  min-width: 200px;
  margin-right: 10px;
}

.sk-chase {
  width: 40px;
  height: 40px;
  position: relative;
  animation: sk-chase 2.5s infinite linear both;
}

.sk-chase-dot {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  animation: sk-chase-dot 2.0s infinite ease-in-out both;
}

.sk-chase-dot:before {
  content: '';
  display: block;
  width: 25%;
  height: 25%;
  background-color: #73818f;
  border-radius: 100%;
  animation: sk-chase-dot-before 2.0s infinite ease-in-out both;
}

.sk-chase-dot:nth-child(1) { animation-delay: -1.1s; }
.sk-chase-dot:nth-child(2) { animation-delay: -1.0s; }
.sk-chase-dot:nth-child(3) { animation-delay: -0.9s; }
.sk-chase-dot:nth-child(4) { animation-delay: -0.8s; }
.sk-chase-dot:nth-child(5) { animation-delay: -0.7s; }
.sk-chase-dot:nth-child(6) { animation-delay: -0.6s; }
.sk-chase-dot:nth-child(1):before { animation-delay: -1.1s; }
.sk-chase-dot:nth-child(2):before { animation-delay: -1.0s; }
.sk-chase-dot:nth-child(3):before { animation-delay: -0.9s; }
.sk-chase-dot:nth-child(4):before { animation-delay: -0.8s; }
.sk-chase-dot:nth-child(5):before { animation-delay: -0.7s; }
.sk-chase-dot:nth-child(6):before { animation-delay: -0.6s; }

@keyframes sk-chase {
  100% { transform: rotate(360deg); }
}

@keyframes sk-chase-dot {
  80%, 100% { transform: rotate(360deg); }
}

@keyframes sk-chase-dot-before {
  50% {
    transform: scale(0.4);
  } 100%, 0% {
      transform: scale(1.0);
    }
}
